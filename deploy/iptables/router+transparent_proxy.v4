###############################################################################
#
#    Netfilter/IPTABLES rules for PyCaptive, with Transparent Proxy
#
#
#
#    Notice:
#
#    	1. The model observed here, follows the same principle described on
#    	router_pycaptive.v4 file, with the exception of:
#
#	    - TWO networks behind ONE interface
#	    - PyCaptive is enabled just for one network
#    	    - rules for directing HTTP traffic for SQUID
#    	    - rules for enabling traffic for some specific services
#    	    - logging configuration
#
#    	2. For additional content and more complete documentation,  please,
#    	refer "router_pycaptive.v4".
#
#    	P.S.: the first Production Environment where PyCaptive started to
#    	operate, was backed by this set of rules.
#
#
#
#    Scenario:
#                                                                               
#       LAN -> eth2                                                             
#       - network: 192.168.0.0/24 - 255.255.255.0 (PyCaptive)                              
#       - gateway: 192.168.0.1                                                  
#       -----------------------------------------
#       - network: 10.255.255.0/26 - 255.255.255.192                               
#       - gateway: 10.255.255.62                                                  
#
#       WAN -> eth1
#
#       P.S.:                                                                   
#                                                                               
#       - BE SURE to adjust the interfaces, netmasks, etc., according to your scenario.
# 
#
#    Best regards,
#    @ivaneleoncz (ivanlmj@gmail.com)
#
#
############################################################################### 

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# PYCAPTIVE: After PyCaptive authentication (*nat table), rules are added    
# on top of *mangle table (per IP), with INTERNET chain as destination.         
#                                                                                
# -A PREROUTING -i eth2 -s 192.168.0.22 -j INTERNET                             
# -A PREROUTING -i eth2 -s 192.168.0.13 -j INTERNET 
# -A PREROUTING -i eth2 -s 192.168.0.123 -j INTERNET                            
# -A PREROUTING -i eth2 -s 192.168.0.64 -j INTERNET 
# PYCAPTIVE: Ensures that, both INTERNET and PYCAPTIVE chains exist.
-N INTERNET
-N PYCAPTIVE
# PYCAPTIVE: Traffic with port 80 as destination (TCP/UDP): directed to PYCAPTIVE chain.
-A PREROUTING -i eth2 -m iprange --src-range 192.168.0.10-192.168.0.254 -p tcp -m tcp --dport 80 -j PYCAPTIVE
-A PREROUTING -i eth2 -m iprange --src-range 192.168.0.10-192.168.0.254 -p udp -m udp --dport 80 -j PYCAPTIVE
# PYCAPTIVE: Traffic with port 443 as destination (TCP/UDP): DROPPED.
-A PREROUTING -i eth2 -m iprange --src-range 192.168.0.10-192.168.0.254 -p tcp -m tcp --dport 443 -j DROP
-A PREROUTING -i eth2 -m iprange --src-range 192.168.0.10-192.168.0.254 -p udp -m udp --dport 443 -j DROP
# PYCAPTIVE: Packets traversing PYCAPTIVE chain: directed to MARK chain, where each one receives "mark 1".
-A PYCAPTIVE -j MARK --set-mark 1
# PYCAPTIVE: Packets traversing INTERNET chain: ACCEPTED
-A INTERNET -j ACCEPT
COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]

# LOGGING: HTTP Traffic
-A PREROUTING -i eth2 -s 10.255.255.0/26 -p tcp -m tcp --dport 80 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-http-tcp-10] " --log-level 7
-A PREROUTING -i eth2 -s 10.255.255.0/26 -p udp -m udp --dport 80 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-http-udp-10] " --log-level 7
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p tcp -m tcp --dport 80 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-http-tcp-192] " --log-level 7
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p udp -m udp --dport 80 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-http-udp-192] " --log-level 7
# LOGGING: HTTPS Traffic
-A PREROUTING -i eth2 -s 10.255.255.0/26 -p tcp -m tcp --dport 443 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-https-tcp-10] " --log-level 7
-A PREROUTING -i eth2 -s 10.255.255.0/26 -p udp -m udp --dport 443 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-https-udp-10] " --log-level 7
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p tcp -m tcp --dport 443 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-https-tcp-192] " --log-level 7
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p udp -m udp --dport 443 -m limit --limit 30/sec -j LOG --log-prefix "[netfilter-https-udp-192] " --log-level 7
# PYCAPTIVE: PyCaptive interface accessible after successful authentication, escaping "NOT MARKED packets" rules
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p tcp -d 192.168.0.1 --dport 80 -j DNAT --to-destination 192.168.0.1:14901
# PYCAPTIVE: MARKED PACKETS: directed to NGINX <-> GUNICORN <-> PyCaptive.
-A PREROUTING -i eth2 -p tcp -m tcp -m mark --mark 1 -j DNAT --to-destination 192.168.0.1:14901
-A PREROUTING -i eth2 -p udp -m udp -m mark --mark 1 -j DNAT --to-destination 192.168.0.1:14901
# PYCAPTIVE: NOT MARKED packets with port 80 as destination -> directed to SQUID3 (Transparent Proxy).
-A PREROUTING -i eth2 -s 10.255.255.0/26 -p tcp --dport 80 -j DNAT --to-destination 10.255.255.62:3128
-A PREROUTING -i eth2 -s 192.168.0.0/24 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:3128
# ROUTING: Masquerading traffic from internal non-valid IPs (LAN), to appear that the traffic was originated from the router.
-A POSTROUTING -o eth1 -j MASQUERADE
# PROXY: Incoming traffic with source port 80 -> redirecting to SQUID
-A PREROUTING -i eth1 -p tcp --sport 80 -j REDIRECT --to-port 3128
COMMIT

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
# ROUTING: Allow ICMP (Ping)
-A INPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED --icmp-type 8 -j ACCEPT
# ROUTING: Allowing Established Connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# SERVICE: SSH (Server Remote Access)
-A INPUT -i eth1 -p tcp --dport 22 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 22 -j ACCEPT
# SERVICE: EMAIL (Simple Message Transfer Protocol - SMTP)
-A INPUT -i eth2 -p tcp --dport 25 -j ACCEPT
# SERVICE: DNS (Domain Name System)
-A INPUT -i eth2 -p udp --dport 53 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 53 -j ACCEPT
# SERVICE: DHCP (Dynamic Host Configuration Protocol)
-A INPUT -i eth2 -p udp --dport 67 --sport 68 -j ACCEPT
-A INPUT -i eth2 -p udp --dport 68 --sport 67 -j ACCEPT
# SERVICE: HTTP (Hyper Text Transfer Protocol)
-A INPUT -i eth1 -p tcp --sport 80 -j ACCEPT
-A INPUT -i eth1 -p udp --sport 80 -j ACCEPT
# SERVICE: POP (Post Office Protocol) - EMAIL
-A INPUT -i eth2 -p tcp --dport 110 -j ACCEPT
# SERVICE: NetBIOS - LAN/WAN
-A INPUT -i eth2 -p udp --dport 137 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 137 -j ACCEPT
-A INPUT -i eth2 -p udp --dport 138 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 138 -j ACCEPT
-A INPUT -i eth2 -p udp --dport 139 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 139 -j ACCEPT
-A INPUT -i eth1 -p udp --dport 137 -j ACCEPT
-A INPUT -i eth1 -p tcp --dport 137 -j ACCEPT
-A INPUT -i eth1 -p udp --dport 138 -j ACCEPT
-A INPUT -i eth1 -p tcp --dport 138 -j ACCEPT
-A INPUT -i eth1 -p udp --dport 139 -j ACCEPT
-A INPUT -i eth1 -p tcp --dport 139 -j ACCEPT
# SERVICE: IMAP (Internet Message Access Protocol) - EMAIL
-A INPUT -i eth2 -p tcp --dport 143 -j ACCEPT
# SERVICE: HTTPS
-A INPUT -i eth1 -p tcp --sport 443 -j ACCEPT
-A INPUT -i eth1 -p udp --sport 443 -j ACCEPT
# SERVICE: SMB (Server Message Block) - SAMBA File Server:LAN/WAN
-A INPUT -i eth2 -p udp --dport 445 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 445 -j ACCEPT
-A INPUT -i eth1 -p udp --dport 445 -j ACCEPT
-A INPUT -i eth1 -p tcp --dport 445 -j ACCEPT
# SERVICE: RSYSLOG (Incoming Log Messages from Third-Party Systems)
-A INPUT -i eth2 -p udp --dport 514 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 514 -j ACCEPT
# SERVICE: LDP (Line Printer Daemon) - PRINTER
-A INPUT -i eth2 -p tcp --dport 515 -j ACCEPT
# SERVICE: SMTP (for Message Submission Agent: MSA) - EMAIL
-A INPUT -i eth2 -p tcp --dport 587 -j ACCEPT
# SERVICE: IPP (Internet Printing Protocol) - PRINTER
-A INPUT -i eth2 -p tcp --dport 631 -j ACCEPT
# SERVICE: RNDC (Remote Name Daemon Control) - DNS/BIND config.
-A INPUT -i eth2 -p udp --dport 953 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 953 -j ACCEPT
# SERVICE: IMAP (over SSL) - EMAIL
-A INPUT -i eth2 -p tcp --dport 993 -j ACCEPT
# SERVICE: POP (over SSL) - EMAIL
-A INPUT -i eth2 -p tcp --dport 995 -j ACCEPT
# SERVICE: SSDP (Simple Service Discovery Protocol) - UPnP
-A INPUT -i eth1 -p udp --dport 1900 -j ACCEPT
# SERVICE: SQUID3 (Proxy) - see on top *nat table
-A INPUT -i eth2 -p tcp --dport 3128 -j ACCEPT
# SERVICE: APNS (Apple Push Notification Service) - iCloud
-A INPUT -i eth2 -p tcp --dport 5223 -j ACCEPT
# SERVICE: MDNS (Multicast DNS)
-A INPUT -i eth2 -p udp --dport 5353 -j ACCEPT
# SERVICE: VNC (Virtual Network Computing) - Remote Desktop
-A INPUT -i eth2 -p tcp --dport 5900 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 5901 -j ACCEPT
# SERVICE: PDL (Printer Descriptive Language) - PRINTER
-A INPUT -i eth2 -p tcp --dport 9100 -j ACCEPT
# SEVICE: NGINX (Gunicorn -> PyCaptive)
-A INPUT -i eth2 -p tcp --dport 14900 -j ACCEPT
# SERVICE: NGINX (Web Server -> Gunicorn)
-A INPUT -i eth2 -p tcp --dport 14901 -j ACCEPT
# SERVICE: DROPBOX
-A INPUT -i eth2 -p udp --dport 17500 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 17500 -j ACCEPT
-A INPUT -i eth1 -p udp --dport 17500 -j ACCEPT
-A INPUT -i eth1 -p tcp --dport 17500 -j ACCEPT
-A INPUT -i eth2 -p udp --dport 17600 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 17600 -j ACCEPT
-A INPUT -i eth2 -p udp --dport 17603 -j ACCEPT
-A INPUT -i eth2 -p tcp --dport 17603 -j ACCEPT
# LOGGING: All incoming traffic not allowed above.
-A INPUT -i eth2 -m limit --limit 1/min -j LOG --log-prefix "[netfilter-drop-in-lan] " --log-level 7
-A INPUT -i eth1 -m limit --limit 1/min -j LOG --log-prefix "[netfilter-drop-in-wan] " --log-level 7
# LOCAL: Allowing Localhost Traffic
-A INPUT -i lo -j ACCEPT
# SECURITY: REJECT incoming connections, that are not established/related or allowed.
-A INPUT -j REJECT
# ROUTING: ACCEPT outgoing connections, from any interface.
-A OUTPUT -j ACCEPT
COMMIT
